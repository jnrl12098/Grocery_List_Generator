20230305
GUI Version 0.10
* applied object-oriented programming to make the code more organized
* transfered fileAsList and refreshListbox to a separate python file dedicated to utility functions
* transfered the search recipe function to a separate class with a dedicated GUI, all found in a separate python file
	* note: it was a good exercise to use callbacks to transfer data from a class object to any outside variable
* implemented a "display all recipes" button to the search window
* implemented keyboard shortcuts to the following windows:
	* on Search Window:
		* on Entrybox:
			* Enter: 			filter search results
			* Ctrl + BackSpace:	clear the entire entrybox
		* on Listbox:
			* Enter:			display the ingredients of the highlighted recipe
			* Ctrl + Enter: 	choose the highlighted recipe; its contents are copied to the Recipe Tab of the Main Window
	* on Display Ingredients Window:
		* Escape: 				closes the window
* after filtering search results and the listbox is empty, the "display ingredients" and "choose recipe" buttons are disabled;
	if both buttons are disabled, they are turned back to normal when the listbox is filled with at least one entry

20230303
GUI Version 0.09
* refactored editRecipe and addRecipeToGL to use switchToEditRecipe and switchToGroceryList respectively 
  to decrease verbosity
* changed the following to become easier to understand:
	switchToGL to switchToGroceryList
	switchToIL to switchToInventoryList 
	onClose to checkInventoryListOnClose
* changed searchWord to entrybox.get() in filterSearch's listlabel to become more accurate
* changed contextM2List conditions to consider if narrowedList was empty before configuring the contextButton
	* if the narrowedList was empty, then there is no need to configure the contextButton to display ingredients
* removed the (len(displayedRecipe) != 0) condition on displayRecipe since it prevented the user from searching for another recipe after having a previous recipe displayed
* removed displayedRecipe.clear() in filterSearch to avoid unnecessarily clearing the list while searching for a recipe

20230302
GUI Version 0.08
* implemented a "Clear Selection" function and button
	* wanted to clear selection by clicking on any whitespace on the listbox but this method was simpler
* changed the insItem function
	* before: the inserted item appeared above the current selected item, which felt less intuitive
	* now: the inserted item appears below the current selected item and becomes the new selected item
		* if the current selected item is found at the bottom of the list, .append() is used (to achieve O(1))
		  else, .insert() is used (which achieves O(n))
* improved the delItem function
	* before: had issues with duplicates (e.g. empty lines) because it always removes the first instance of the item
	* now: the function now removes the item using the specified index, which is more accurate
		* this now allows empty lines as input
* implemented a few keyboard shortcuts
	* on Main Window:
		* Escape:			clear current listbox selection
	* on Entrybox:
		* Enter:			if no item is selected, add item; else, insert item
		* Ctrl + Enter: 	edit the selected item
		* Ctrl + BackSpace:	clear the entire entrybox
	* on Listbox:
		* BackSpace:		delete the selected item, then select the item before it
		* Delete:			delete the selected item, then select the item after it
		* Ctrl + Enter:		copy the selected item to the entrybox 
			* useful for editing items; just remember to use Ctrl + Enter again to finalize editing the item

20230228
GUI Version 0.07
* implemented a message box that will appear if the user changed the state of the inventory list and
  they haven't saved these changes yet
	* it will not appear if the user used the edit tools but the end result is the same state as it was before
* cleaned up some of the comments such as the TODOs

20230223
GUI Version 0.06
* implemented "Search for a Recipe" function
* implemented "Export" function for grocery lists, custom recipes, inventory lists
	* included date of day for naming grocery lists
	* allowed the user to input names for customized recipes
* implemented mouse events to configure context buttons depending on the associated mode
* disabled Edit, Insert, Add, and Remove buttons for mode 2 (Search for a Recipe)
GUI Version 0.05
* implemented an "Insert" Button which felt necessary to maintain the intended structure of the Inventory List
	* i.e, having categories such as [MEAT], [VEGETABLES], etc. 

20230216
GUI Version 0.04
* added a list for custom recipes
	* this will also store any recipe the user chooses in a future search function
* for now, the purpose of the mode variable is to prevent unnecessarily refreshing the listbox if the mode is the same
* for now, the lists are independent of each other, but these relationships are kept in mind:
	* ideally, the grocery list should automatically change if changes to the inventory list affect it
	* if a recipe is added to the grocery list, the ingredients are first filtered
		* i.e., if the ingredient is present in the inventory list, it will not be added to the grocery list
* boilerplate for the switchToNthList function could allow for easier implementation of future lists
	* e.g. "must-haves" list
* design choice: it is the user's responsibility to reflect changes in the inventory list to the grocery list
		if, for example, a recipe was introduced to the grocery list,
         the ingredients are first filtered by checking with the inventory list before going to the grocery list;
        but if the inventory list has changed afterwards e.g. an ingredient was removed,
         this ingredient which was initially filtered off from the recipe 
		  will not be automatically added to the grocery list;
        this is the user's responsibility now
		likewise, if an item was added to the inventory list, this item is not automatically removed from the grocery list
	* this is more flexible for the user; say they still have Salt in their inventory but are running out, 
		they could still choose to put Salt in their grocery list without the program messing with that
GUI Version 0.03
* implemented use of multiple lists (2 for now) that share one listbox
* when switching between lists:
	* data within lists are preserved 
	* the listbox refreshes to reflect the current list
* note: 
	list_A = []
	list_B = []
	list_A = list_B 
		will give list_A the memory address of list_B; list_A.append is now the same as list_B.append
	=> this allows the use of a middle-man list when switching between lists
GUI Version 0.02
* implemented O(1) method to update the internal list
GUI Version 0.01
* started with an entrybox, listbox, and "Edit," "Add," and "Remove" buttons to manipulate listbox 
* O(n) method to update the internal list
	* each time one of the buttons is clicked, the list is cleared and rebuilt
	* TODO: specialize the update function for each button to achieve O(1) when updating the internal list
* internal list is called midList as this list acts as a middle-man between the listbox and the various lists
	* lists such as Grocery List, List of Ingredients, Inventory List

20230201
Project Version 0.03
* made using "_Recipes.txt" to generate list of recipes obsolete by using os.scandir
* improved the edit_list function by passing if the user inputs "" to avoid adding blanks, removing the entire list, or replacing an item on the list with a blank

20230116
Project Version 0.02
* incorporated walrus operators and list comprehensions to shorten code
	* note that
		choice = ""
		while choice := input() not in ["y","n"] 
			pass 				
	results in choice as true or false but
		choice = ""
		while (choice := input()) not in ["y","n"]
			pass
	results in choice as "y" or "n" 
* implemented a function to edit (add, remove, replace items) a list e.g. ingredients of a recipe or the items of a grocery list
	* considers a scenario where the user has emptied the list
* implemented export of grocery list into a text file

20230113 
Project Version 0.02 (no commits yet)
* cleanup of boilerplate code
	* implemented a function to write the contents of a text file into a list
	* implemented a function to display the contents of a list with numbering
* changed while done_adding = False into while True; going to incorporate this style from now on

20230103 8:20PM - 20230104 12:18AM 
Project Version 0.01
* implemented search function 
	*user can input full recipe name or portion of the name and program will output list of recipes based on that input
	*user can choose to search for another recipe if they want
* implemented checking function 
	*program will check if the recipe's text file of ingredients exists 
	*it is possible that if the recipe "does not exist," the name of the text file for the recipe was just misspelled
* implemented grocery list function 
	* after choosing one or multiple recipes, the ingredients of the chosen recipe/s are added to the grocery list 
		* duplicate ingredients and ingredients that currently exist in inventory (in-stock) are not added
	* these ingredients are sorted by alphabetical order before being presented to the user